name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for PostgreSQL to be ready
        env:
          PGPASSWORD: test_password
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U test_user && break
            echo "Waiting for PostgreSQL... ($i/30)"
            sleep 2
          done

      - name: Run migrations / seed DB (if present)
        env:
          PGPASSWORD: test_password
        run: |
          # اگر فایل‌ها وجود دارند آنها را اجرا کن، در غیر اینصورت این مرحله خطا ندهد (|| true)
          if [ -f migrations/001_initial.sql ]; then
            psql -h localhost -U test_user -d test_db -f migrations/001_initial.sql || true
          fi
          if [ -f migrations/002_sample_data.sql ]; then
            psql -h localhost -U test_user -d test_db -f migrations/002_sample_data.sql || true
          fi
          if [ -f migrations/003_users.sql ]; then
            psql -h localhost -U test_user -d test_db -f migrations/003_users.sql || true
          fi

      - name: Print DB tables (debug)
        env:
          PGPASSWORD: test_password
        run: |
          psql -h localhost -U test_user -d test_db -c "\dt" || true
          psql -h localhost -U test_user -d test_db -c "SELECT count(*) FROM information_schema.tables WHERE table_schema='public';" || true

      - name: Run tests
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
        run: |
          python -m pytest -v

